ls | cat -e
exit
|
cd /MSTEST
exit
exit
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
ls | ok
/bin/echo <123 <456 hi | /bin/echo 42
exit
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
ls | cat -e > ok
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: maximemartin <maximemartin@student.42.f    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/02/25 10:52:16 by diana             #+#    #+#             */
/*   Updated: 2025/03/24 15:38:05 by maximemarti      ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */
#include "include/minishell.h"
int	init_shell(char **env, t_env **env_list, char ***path_splitted, \
	char ***path_sp_w_slash)
{
	*path_splitted = NULL;
	*path_sp_w_slash = NULL;
	*env_list = initialize_environment(env, *env_list);
	disable_echoctl();
	return (0);
}
int	handle_user_input(t_command **cmd_info, t_env *env_list, \
	t_shell *shell, char **path)
{
	set_signals();
	if (isatty(STDIN_FILENO))
	{
		*cmd_info = get_input(env_list, 0, shell, path);
		if (!*cmd_info)
			return (0);
	}
	else
	{
		*cmd_info = get_input(env_list, 1, shell, path);
		if (!*cmd_info)
			return (0);
	}
	return (1);
}
void	initialize_shell(t_env **env_list, char **env, t_shell_data *data)
{
	data->original_stdout = dup(STDOUT_FILENO);
	data->shell.exit_code = 0;
	if (init_shell(env, env_list, &data->path_splitted, \
		&data->path_sp_w_slash) == 1)
		exit(EXIT_FAILURE);
	read_history(".minishell_history");
}
void	execute_shell_loop(t_env *env_list, char **env)
{
	t_shell_data	data;
	t_command		*cmd_info;
	int				input_status;
	initialize_shell(&env_list, env, &data);
	while (1)
	{
		handle_path(&data.path_splitted, &data.path_sp_w_slash, env_list);
		set_signals();
		input_status = handle_user_input(&cmd_info, env_list, \
			&data.shell, data.path_sp_w_slash);
		if (input_status != 0)
			data.shell.exit_code = \
			execute_command(cmd_info, data.path_sp_w_slash, env_list);
		if (cmd_info->c_red_o == 1 || \
			cmd_info->c_append == 1 || cmd_info->c_pipe >= 1)
			dup2(data.original_stdout, STDOUT_FILENO);
		if (cmd_info)
			free_command(cmd_info);
	}
}
int	main(int ac, char **av, char **env)
{
	t_env	*env_list;
	if (ac == 0)
		return (1);
	*av = NULL;
	env_list = NULL;
	execute_shell_loop(env_list, env
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
ls -l /proc/$$/fd
exit
ls -l /proc/$$/fd
exit
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
exi
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
/bin/echo "cat lol.c | cat > lol.c"
/bin/echo "cat lol.c | cat > lol.c"
exit
ls | cat -e
/bin/echo "cat lol.c | cat > lol.c"
exit
/bin/echo "cat lol.c | cat > lol.c"
exit
/bin/echo "cat lol.c | cat > lol.c"
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
/bin/echo <123 <456 hi | /bin/echo 42
exit
|
cd /MSTEST
exit
exit
|
cd /MSTEST
exit
exit
echo 42 | echo no | echo smth | grep 42
|
cd /MSTEST
exit
exit
|
cd /MSTEST
exit
exit
|
cd /MSTEST
exit
exit
echo 42 | echo no | echo smth | grep 42
ok
exit
echo 42 | echo no | echo smth | grep 42
exit
/bin/echo "cat lol.c | cat > lol.c"
/bin/echo "cat lol.c | cat > lol.c"
/bin/echo hi >./outfiles/outfile01 | /bin/echo bye
export kjio\
ls -a | cat -e | echo
ls -a | cat -e | echo
ls -a | cat -e 
ls -a | cat -e | echo max
cat file.txt | grep "error" | sort
cat file.txt | grep "error" | sort
cat  main.c | grep error | sort
exit
cat  main.c | grep main | sort
cat  main.c | grep main | sort > 42tamere
ls
cat  main.c | grep main
cat  main.c | grep main > 42tamere
exit
cat  main.c | grep main > 42tamere
rxit
exit
ls | cat -e > tamere
exit
ls | cat -e > tamere
ls
rm tamere 
ls | cat -e > tamere
cat tamere 
ls | cat -e > tamere
cat main.c | grep main > koko
ls
cat koko
cat main.c | grep main | sort > koko
cat main.c | grep main | sort > koko21
ls
cat koko21
cat main.c | > grep main | sort > koko21
cat main.c |  grep > main | sort > koko21
cat main.c |  grep '\>' main | sort > koko21
cat main.c | grep main | sort > koko21
ls | cat -e > tamere
exit
|
cd /MSTEST
exit
exit
ls
ok
ls | cat -e > tamere
cat tamere 
cat main.c | grep main | sort > koko21
exit
env
./minishell 
exit
env
./minishell 
cd /MSTEST
ls
ls | cat -e
exit
unset PATH
ls
cd /bin
cd src
ls
exit
cd
ls
cd 42-cursus/
cd so_long/
ls
make 
./so_long maps/map.ber 
env
ls
mf
make fclean
ls
cd ..
ls
cd ..
